@using Common.Exceptions
@using Domain.Dtos;
@using Domain.Services;
@inject IUserService userService
@model SelectedArticleViewModel

<div class="d-flex flex-column">
    <div class="d-flex flex-row">
        <h2>@Model.SelectedArticle.Owner.Login</h2>
        <h4 class="align-content-end">•@Model.SelectedArticle.CreationDate.ToLongDateString()</h4>
    </div>
    <input id="ownerId" value="@Model.SelectedArticle.Owner.Id" hidden />
    <h1 class="text-center">@Model.SelectedArticle.Title</h1>
</div>

<div class="mb-3">
    <lab class="text-wrap text-xxl-start" style="white-space: pre-line">
        @Html.Raw(Model.SelectedArticle.Content.Replace(Environment.NewLine, "<br/>"));
    </lab>
</div>

<div>
    <h3>Комментарии</h3>
    @{
        CreateCommentViewModel vm = new CreateCommentViewModel();
        vm.ArticleId = Model.SelectedArticle.Id;
        await Html.RenderPartialAsync("..\\Comment\\_CreateComment.cshtml", vm);
    }
    <div class="row p-1">
        <div class="col-6">
            <ul id="commentsList"></ul>
        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/comment.js"></script>